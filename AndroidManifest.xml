<?xml version="1.0"?>
<!--
  To get your application working with Mixpanel (particularly for push notifications),
  you will need to make some changes to your application manifest file.

  You can use this file as a model for the sorts of changes required. Be aware that
  you will need to replace "com.mixpanel.example.hello" with your application package
  name in several places before your application will work.
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.mixpanel.example.hello"
    android:versionCode="1"
    android:versionName="1.0" >

    <!--
      This permission is required to allow the application to send events and properties to Mixpanel.
     -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!--
      This permission is optional but recommended so we can be smart about when to send data.
     -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!--
      This permission is optional but recommended so events will contain information about bluetooth state
    -->
    <uses-permission android:name="android.permission.BLUETOOTH" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >

        <!-- to support 2.2 (Froyo) and older devices, your application should allow fallback
             to HTTP if modern HTTPS certificates aren't supported. -->
        <meta-data android:name="com.mixpanel.android.MPConfig.DisableFallback"
               android:value="false" />

        <!-- The Mixpanel library will automatically attempt to show available surveys or in
             app notifications every time a new Activity is displayed. To disable this behavior,
             add the following line. The default value for this option is set to true. -->
        <meta-data android:name="com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates"
               android:value="false" />

        <!-- If you wish to test receiving surveys or notifications multiple times, the following option
             will prevent tracking that a survey or notification has been displayed to Mixpanel.
             This will allow you to tweak your surveys or in app notifications without having to create
             a new one each time. -->
        <meta-data android:name="com.mixpanel.android.MPConfig.TestMode"
            android:value="true" />

        <!-- This will enable various debugging messages that shows communication between the Mixpanel
             Android library and the Mixpanel API servers, which are useful for seeing when track requests
             go out and when surveys and notifications are received. -->
        <meta-data android:name="com.mixpanel.android.MPConfig.EnableDebugLogging"
            android:value="true" />

        <activity
            android:name=".MainActivity"
            android:label="@string/title_activity_main" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- This activity allows your application to show Mixpanel takeover in app notifications.
             If you only wish to show mini in app notifications, you do not need to declare this Activity.
             You may also specify a different theme to better fit the look and feel of your application. -->
        <activity android:name="com.mixpanel.android.takeoverinapp.TakeoverInAppActivity"
                  android:theme="@style/com_mixpanel_android_TakeoverInAppActivityTheme"/>

        <!-- This receiver will allow your application to record referrer parameters as super properties automatically -->
        <receiver android:name="com.mixpanel.android.mpmetrics.InstallReferrerReceiver" android:exported="true">
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>
        <!-- Mixpanel FCM Messaging Service. -->
        <service
            android:name="com.mixpanel.android.mpmetrics.MixpanelFCMMessagingService"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>
    </application>
</manifest>
